# Description: Attempts to inhibit the screensaver before running the main
#              loop will always fall back to X11, as the dbus proxy will not
#              be configured until the main loop runs. Fix this by postponing
#              requests to disable the screensaver until screensaver_dbus_proxy_new_cb
#              has been run
# Bug-Ubuntu: https://launchpad.net/bugs/630753
# Forwarded: no
# Author: Chris Coulson <chris.coulson@canonical.com>

Index: idol-2.32.0/lib/idol-scrsaver.c
===================================================================
--- idol-2.32.0.orig/lib/idol-scrsaver.c	2010-09-28 00:09:41.642972000 +0200
+++ idol-2.32.0/lib/idol-scrsaver.c	2010-09-28 00:12:01.642972000 +0200
@@ -64,6 +64,8 @@
 
 	GDBusProxy *gs_proxy;
         gboolean have_screensaver_dbus;
+	gboolean init_dbus_done;
+	gboolean queue_disable;
 	guint32 cookie;
 	gboolean old_dbus_api;
 
@@ -82,9 +84,9 @@
 G_DEFINE_TYPE(IdolScrsaver, idol_scrsaver, G_TYPE_OBJECT)
 
 static gboolean
-screensaver_is_running_dbus (IdolScrsaver *scr)
+screensaver_maybe_running_dbus (IdolScrsaver *scr)
 {
-        return scr->priv->have_screensaver_dbus;
+        return scr->priv->have_screensaver_dbus || ! scr->priv->init_dbus_done;
 }
 
 static void
@@ -211,13 +213,19 @@
 static void
 screensaver_enable_dbus (IdolScrsaver *scr)
 {
-	screensaver_inhibit_dbus (scr, FALSE);
+	if (scr->priv->init_dbus_done)
+		screensaver_inhibit_dbus (scr, FALSE);
+	else
+		scr->priv->queue_disable = FALSE;
 }
 
 static void
 screensaver_disable_dbus (IdolScrsaver *scr)
 {
-	screensaver_inhibit_dbus (scr, TRUE);
+	if (scr->priv->init_dbus_done)
+		screensaver_inhibit_dbus (scr, TRUE);
+	else
+		scr->priv->queue_disable = TRUE;
 }
 
 static void
@@ -236,6 +244,42 @@
 }
 
 static void
+screensaver_disable_x11 (IdolScrsaver *scr)
+{
+
+#ifdef HAVE_XTEST
+	if (scr->priv->have_xtest != FALSE)
+	{
+		XLockDisplay (GDK_DISPLAY());
+		XGetScreenSaver(GDK_DISPLAY(), &scr->priv->timeout,
+				&scr->priv->interval,
+				&scr->priv->prefer_blanking,
+				&scr->priv->allow_exposures);
+		XUnlockDisplay (GDK_DISPLAY());
+
+		if (scr->priv->timeout != 0) {
+			g_timeout_add_seconds (scr->priv->timeout / 2,
+					       (GSourceFunc) fake_event, scr);
+		} else {
+			g_timeout_add_seconds (XSCREENSAVER_MIN_TIMEOUT / 2,
+					       (GSourceFunc) fake_event, scr);
+		}
+
+		return;
+	}
+#endif /* HAVE_XTEST */
+
+	XLockDisplay (GDK_DISPLAY());
+	XGetScreenSaver(GDK_DISPLAY(), &scr->priv->timeout,
+			&scr->priv->interval,
+			&scr->priv->prefer_blanking,
+			&scr->priv->allow_exposures);
+	XSetScreenSaver(GDK_DISPLAY(), 0, 0,
+			DontPreferBlanking, DontAllowExposures);
+	XUnlockDisplay (GDK_DISPLAY());
+}
+
+static void
 screensaver_dbus_owner_changed_cb (GObject    *object,
                                    GParamSpec *pspec,
                                    gpointer    user_data)
@@ -253,6 +297,8 @@
 	IdolScrsaver *scr = IDOL_SCRSAVER (user_data);
 	IdolScrsaverPrivate *priv = scr->priv;
 
+	priv->init_dbus_done = TRUE;
+
 	priv->gs_proxy = g_dbus_proxy_new_for_bus_finish (result, NULL);
 	if (!priv->gs_proxy)
 		return;
@@ -262,6 +308,15 @@
 	g_signal_connect (priv->gs_proxy, "notify::g-name-owner",
 	                  G_CALLBACK (screensaver_dbus_owner_changed_cb),
 	                  scr);
+
+	if (scr->priv->queue_disable) {
+	/* Somebody already called inhibit before we knew whether we
+	 * were using dbus or x11. Handle this now that we know */
+		if (scr->priv->have_screensaver_dbus)
+			screensaver_disable_dbus (scr);
+		else
+			screensaver_disable_x11 (scr);			
+	}
 }
 
 static void
@@ -332,42 +387,6 @@
 #endif /* HAVE_XTEST */
 
 static void
-screensaver_disable_x11 (IdolScrsaver *scr)
-{
-
-#ifdef HAVE_XTEST
-	if (scr->priv->have_xtest != FALSE)
-	{
-		XLockDisplay (GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()));
-		XGetScreenSaver(GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()), &scr->priv->timeout,
-				&scr->priv->interval,
-				&scr->priv->prefer_blanking,
-				&scr->priv->allow_exposures);
-		XUnlockDisplay (GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()));
-
-		if (scr->priv->timeout != 0) {
-			g_timeout_add_seconds (scr->priv->timeout / 2,
-					       (GSourceFunc) fake_event, scr);
-		} else {
-			g_timeout_add_seconds (XSCREENSAVER_MIN_TIMEOUT / 2,
-					       (GSourceFunc) fake_event, scr);
-		}
-
-		return;
-	}
-#endif /* HAVE_XTEST */
-
-	XLockDisplay (GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()));
-	XGetScreenSaver(GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()), &scr->priv->timeout,
-			&scr->priv->interval,
-			&scr->priv->prefer_blanking,
-			&scr->priv->allow_exposures);
-	XSetScreenSaver(GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()), 0, 0,
-			DontPreferBlanking, DontAllowExposures);
-	XUnlockDisplay (GDK_DISPLAY_XDISPLAY (gdk_display_get_default ()));
-}
-
-static void
 screensaver_init_x11 (IdolScrsaver *scr)
 {
 #ifdef HAVE_XTEST
@@ -500,7 +519,7 @@
 
 	scr->priv->disabled = TRUE;
 
-	if (screensaver_is_running_dbus (scr) != FALSE)
+	if (screensaver_maybe_running_dbus (scr) != FALSE)
 		screensaver_disable_dbus (scr);
 	else 
 #ifdef GDK_WINDOWING_X11
@@ -521,7 +540,7 @@
 
 	scr->priv->disabled = FALSE;
 
-	if (screensaver_is_running_dbus (scr) != FALSE)
+	if (screensaver_maybe_running_dbus (scr) != FALSE)
 		screensaver_enable_dbus (scr);
 	else
 #ifdef GDK_WINDOWING_X11
